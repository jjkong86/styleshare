DROP TABLE IF EXISTS GOODS_DETAIL;
DROP TABLE IF EXISTS GOODS;
DROP TABLE IF EXISTS CART;
DROP TABLE IF EXISTS USER;
DROP TABLE IF EXISTS AUTHORITES;

 CREATE TABLE GOODS (
	ID INT(10),
	NAME VARCHAR(40),
	PROVIDER VARCHAR(40),
	PRICE INT(40),
	SHIPPING_METHOD VARCHAR(40),
	SHIPPING_PRICE INT(40),
	SHIPPING_CANBUNDLE BOOLEAN,
	REG_DTM TIMESTAMP DEFAULT CURRENT_TIMESTAMP ,
	UPD_DTM TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (ID)
 );
 
 CREATE TABLE GOODS_DETAIL (
	ID INT(10),
	COLOR VARCHAR(20),
	SIZE VARCHAR(10),
	STOCK INT(20),
	GOODS_ID INT(10),
	REG_DTM TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	UPD_DTM TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (ID, GOODS_ID),
	FOREIGN KEY (GOODS_ID) REFERENCES GOODS (ID)
 );

 CREATE TABLE CART (
 	ID INT(10) AUTO_INCREMENT,
	GOODS_ID INT(10),
	GOODS_DETAIL_ID INT(10),
	AMOUNT INT(10),
	REG_DTM TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	UPD_DTM TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (ID)
 );
 
 CREATE TABLE USER (
 	userId INT(10) AUTO_INCREMENT,
 	EMAIL VARCHAR(40),
	PASSWORD VARCHAR(40),
	STATUS CHAR(1),
	PRIMARY KEY (userId)
 );
 
 CREATE TABLE ROLE (
 	roleId INT(10) AUTO_INCREMENT,
 	roleName VARCHAR(20),
 	PRIMARY KEY (roleId)
 ); 
 
 CREATE TABLE AUTHORITES (
 	ID INT(10) AUTO_INCREMENT,
 	userId INT(10),
 	roleId INT(10),
 	PRIMARY KEY (ID),
 	FOREIGN KEY (userId) REFERENCES USER (userId),
 	FOREIGN KEY (roleId) REFERENCES ROLE (roleId)
 );
 
 INSERT INTO USER(EMAIL, PASSWORD, STATUS) VALUES('jj@naver.com', 1234, 1);
 INSERT INTO USER(EMAIL, PASSWORD, STATUS) VALUES('jj@gmail.com', 1234, 2);

 INSERT INTO ROLE(roleName) VALUES('ROLE_USER');
 INSERT INTO ROLE(roleName) VALUES('ROLE_PRE_USER');
 
 INSERT INTO AUTHORITES(userId, roleId) VALUES(1, 1);
 INSERT INTO AUTHORITES(userId, roleId) VALUES(2, 2);
